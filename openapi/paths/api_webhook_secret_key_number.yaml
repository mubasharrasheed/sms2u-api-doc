get:
  tags:
    - SMS2U
  summary: messages
  description: >-
    This documentation describes the 'messages' endpoint. 


    The endpoint is a GET request, which typically signifies data retrieval. The
    URL for this request is specified as
    'https://dashboard.sms2u.io/api/webhook/secret_key/number'. 


    This URL routes to the 'sms2u' service's API, specifically the 'webhook'
    section. The string following 'webhook/' looks to be a Base64 encoded string
    or some other encoded identifier, possibly specifying the user to be
    contacted or the specific webhook instance. Following this identifier,
    'number' seems to be a phone number, likely the one to which an SMS is going
    to be sent. 


    The request does not specify any headers, meaning it does not require any
    specific additional parameters or settings to be included in the HTTP
    request.


    The auth field defines a bearer token authentication method. This method of
    authentication uses a bearer token, a cryptographic string, which must be
    included in all requests to this endpoint. The key for the auth token is
    'token', and the value is 'BearerToken'; these will be needed to ensure a
    successful and secure connection. 


    Please replace 'BearerToken' with the actual bearer token when sending the
    request. The bearer token type is a string. 


    To summarise, this 'messages' endpoint retrieves data from the specified
    URL, which is set to a specific webhook on the 'sms2u' service. It requires
    bearer token authentication to ensure the request comes from an authorised
    source.
  security:
    - bearerAuth: []
  responses:
    '200':
      description: OK
      headers:
        Server:
          schema:
            type: string
            example: nginx/1.18.0 (Ubuntu)
        Date:
          schema:
            type: string
            example: Tue, 11 Feb 2025 10:37:12 GMT
        Content-Type:
          schema:
            type: string
            example: application/json; charset=utf-8
        Content-Length:
          schema:
            type: integer
            example: '974'
        Connection:
          schema:
            type: string
            example: keep-alive
        X-Powered-By:
          schema:
            type: string
            example: Express
        Access-Control-Allow-Origin:
          schema:
            type: string
            example: '*'
        ETag:
          schema:
            type: string
            example: W/"3ce-Qxd+fADV3OPpGi2RuIWfFuedW+0"
      content:
        application/json:
          schema:
            type: object
          example:
            messages:
              - _id: 67ab1d3cf5d0746d07f0a301
                body: 928511 is your Ticketmaster code.
                from: TKTMASTER
                to: number
                dateReceived: '2025-02-11T09:49:48.039Z'
              - _id: 67aa0a08076f92f8e0c40180
                body: 218128 is your Ticketmaster code.
                from: TKTMASTER
                to: number
                dateReceived: '2025-02-10T14:15:36.868Z'
              - _id: 67a7570d06854264004e6482
                body: 941840 is your Ticketmaster code.
                from: TKTMASTER
                to: number
                dateReceived: '2025-02-08T13:07:25.447Z'
              - _id: 67a754ed06854264004e6473
                body: 941840 is your Ticketmaster code.
                from: TKTMASTER
                to: number
                dateReceived: '2025-02-08T12:58:21.098Z'
              - _id: 67a7536006854264004e6445
                body: 411206 is your Ticketmaster code.
                from: TKTMASTER
                to: number
                dateReceived: '2025-02-08T12:51:44.203Z'
              - _id: 67a7523206854264004e642a
                body: 411206 is your Ticketmaster code.
                from: TKTMASTER
                to: number
                dateReceived: '2025-02-08T12:46:42.522Z'
    '404':
      description: Not Found
      headers:
        Server:
          schema:
            type: string
            example: nginx/1.18.0 (Ubuntu)
        Date:
          schema:
            type: string
            example: Tue, 11 Feb 2025 10:39:46 GMT
        Content-Type:
          schema:
            type: string
            example: application/json; charset=utf-8
        Content-Length:
          schema:
            type: integer
            example: '45'
        Connection:
          schema:
            type: string
            example: keep-alive
        X-Powered-By:
          schema:
            type: string
            example: Express
        Access-Control-Allow-Origin:
          schema:
            type: string
            example: '*'
        ETag:
          schema:
            type: string
            example: W/"2d-hHv8Rbm/ij2cLl9JYZdm1h3pIXg"
      content:
        application/json:
          schema:
            type: object
          example:
            success: false
            message: User Not Found!
