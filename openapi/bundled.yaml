openapi: 3.0.0
info:
  title: Combined API Documentation
  version: 1.0.0
servers:
  - url: https://dashboard.sms2u.io
  - url: https://dashboard.sms2u.io
security:
  - bearerAuth: []
paths:
  /api/webhook/secret_key/number:
    get:
      tags:
        - SMS2U
      summary: messages
      description: |-
        This documentation describes the 'messages' endpoint. 

        The endpoint is a GET request, which typically signifies data retrieval. The URL for this request is specified as 'https://dashboard.sms2u.io/api/webhook/secret_key/number'. 

        This URL routes to the 'sms2u' service's API, specifically the 'webhook' section. The string following 'webhook/' looks to be a Base64 encoded string or some other encoded identifier, possibly specifying the user to be contacted or the specific webhook instance. Following this identifier, 'number' seems to be a phone number, likely the one to which an SMS is going to be sent. 

        The request does not specify any headers, meaning it does not require any specific additional parameters or settings to be included in the HTTP request.

        The auth field defines a bearer token authentication method. This method of authentication uses a bearer token, a cryptographic string, which must be included in all requests to this endpoint. The key for the auth token is 'token', and the value is 'BearerToken'; these will be needed to ensure a successful and secure connection. 

        Please replace 'BearerToken' with the actual bearer token when sending the request. The bearer token type is a string. 

        To summarise, this 'messages' endpoint retrieves data from the specified URL, which is set to a specific webhook on the 'sms2u' service. It requires bearer token authentication to ensure the request comes from an authorised source.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.18.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Tue, 11 Feb 2025 10:37:12 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '974'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"3ce-Qxd+fADV3OPpGi2RuIWfFuedW+0"
          content:
            application/json:
              schema:
                type: object
              example:
                messages:
                  - _id: 67ab1d3cf5d0746d07f0a301
                    body: 928511 is your Ticketmaster code.
                    from: TKTMASTER
                    to: number
                    dateReceived: '2025-02-11T09:49:48.039Z'
                  - _id: 67aa0a08076f92f8e0c40180
                    body: 218128 is your Ticketmaster code.
                    from: TKTMASTER
                    to: number
                    dateReceived: '2025-02-10T14:15:36.868Z'
                  - _id: 67a7570d06854264004e6482
                    body: 941840 is your Ticketmaster code.
                    from: TKTMASTER
                    to: number
                    dateReceived: '2025-02-08T13:07:25.447Z'
                  - _id: 67a754ed06854264004e6473
                    body: 941840 is your Ticketmaster code.
                    from: TKTMASTER
                    to: number
                    dateReceived: '2025-02-08T12:58:21.098Z'
                  - _id: 67a7536006854264004e6445
                    body: 411206 is your Ticketmaster code.
                    from: TKTMASTER
                    to: number
                    dateReceived: '2025-02-08T12:51:44.203Z'
                  - _id: 67a7523206854264004e642a
                    body: 411206 is your Ticketmaster code.
                    from: TKTMASTER
                    to: number
                    dateReceived: '2025-02-08T12:46:42.522Z'
        '404':
          description: Not Found
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.18.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Tue, 11 Feb 2025 10:39:46 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '45'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"2d-hHv8Rbm/ij2cLl9JYZdm1h3pIXg"
          content:
            application/json:
              schema:
                type: object
              example:
                success: false
                message: User Not Found!
  /api/webhook/secret_key/numberAndMessageList:
    get:
      tags:
        - SMS2U
      summary: numberAndMessageList
      description: |-
        Endpoint Name: numberAndMessageList

        This is a GET request, which is used to retrieve data from a specified resource in a server.

        The URL for the request is: https://dashboard.sms2u.io/api/webhook/secret_key/numberAndMessageList. 

        This URL consists of the base URL (https://dashboard.sms2u.io/), api endpoint (/api/webhook/) and the path parameter (/secret_key/numberAndMessageList). This path parameter looks like a long string, which could be a user ID or some kind of unique identifier, but without additional context, we cannot be certain. 

        This request does not contain any header information. Headers are often used to provide additional parameters for the request or the return response, for example content-type or authentication information.

        This request uses Bearer Authentication, a HTTP authentication scheme that involves security tokens called bearer tokens. The bearer token is sent in the 'Authorization' header. The key is named "token" and the value is set to "BearerToken". The "type" indicates that our token's data type is a string. 

        This is the information you provide so the server knows the request comes from an authenticated user. Be careful to replace "BearerToken" with your actual Bearer token, the one you would get after a successful login or authentication, otherwise, the server would reject your request.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1299'
            ETag:
              schema:
                type: string
                example: W/"513-bMig9yqk8NbFiwrpnjV1gXpF+PI"
            Date:
              schema:
                type: string
                example: Wed, 05 Mar 2025 06:32:29 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                messages:
                  - body: 008550 is your Ticketmaster code.
                    from: TKTMASTER
                    to: '+447411239271'
                    dateReceived: '2025-03-03T12:26:18.746Z'
                  - body: Hhh
                    from: '+447810520795'
                    to: '+447411239271'
                    dateReceived: '2025-02-27T08:53:23.993Z'
                  - body: 340508 is your Ticketmaster code.
                    from: TKTMASTER
                    to: '+447411239271'
                    dateReceived: '2025-02-27T08:52:20.564Z'
                  - body: Hello
                    from: '+447810520795'
                    to: '+447411239271'
                    dateReceived: '2025-02-27T08:49:52.611Z'
                  - body: Test
                    from: '+447810520795'
                    to: '+447411239271'
                    dateReceived: '2025-02-27T08:49:07.322Z'
                  - body: 393088 is your Ticketmaster code.
                    from: TKTMASTER
                    to: '+447411239271'
                    dateReceived: '2025-02-27T08:44:15.962Z'
                  - body: 585997 is your Ticketmaster code.
                    from: TKTMASTER
                    to: '+447411239271'
                    dateReceived: '2025-02-26T10:31:03.775Z'
                  - body: 585997 is your Ticketmaster code.
                    from: TKTMASTER
                    to: '+447411239271'
                    dateReceived: '2025-02-26T10:29:22.737Z'
                  - body: Message for the Dev User.
                    from: '+447426936730'
                    to: '+447411239271'
                    dateReceived: '2025-02-21T14:55:05.723Z'
                  - body: Testing message for dev user.
                    from: '+447426936730'
                    to: '+447411239271'
                    dateReceived: '2025-02-21T14:27:35.882Z'
                numbers:
                  - '+10123456789'
                  - '+447411239271'
                success: true
                userId: 67b8893642f63d695338b14c
        '404':
          description: Not Found
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '45'
            ETag:
              schema:
                type: string
                example: W/"2d-HBm/uOBLe9ZO1ca2+PaWNaN2RBE"
            Date:
              schema:
                type: string
                example: Wed, 05 Mar 2025 06:34:55 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: User Not Found!
                success: false
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
