openapi: 3.0.0
info:
  title: Combined API Documentation
  version: 1.0.0
servers:
  - url: https://dashboard.sms2u.io
security:
  - bearerAuth: []
paths:
  /api/yourApiKey/yourPhoneNumber:
    get:
      summary: Get Meesages Via Secret Key
      description: |-
        This endpoint is named "Get Messages Via Secret Key." It utilizes a GET request method that's used to retrieve data from a server. The endpoint URL is "https://dashboard.sms2u.io"; this is the location where the request will be sent. Do note that 'yourApiKey' and 'number' appear to be placeholders, which you need to replace with your actual API key/secret and any number you want to pass.

        This request does not include any specific headers or body content since it's a GET method that's typically used to retrieve information without necessarily sending any data.

        The authentication type for this request is a bearer token. Bearer tokens are security keys that a client application must pass in the Authentication header to prove an identity. In this case, the key name is "token," and the value should be your actual "BearerToken." The format for passing this token is typically: 'Authorization: Bearer YourActualToken'. Remember to replace 'YourActualToken' with your real bearer token to authenticate correctly when making HTTP requests to the server.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '220'
            ETag:
              schema:
                type: string
                example: W/"dc-hnI/LNgp8MRgfUpaZLu9hhApIWg"
            Date:
              schema:
                type: string
                example: Thu, 23 Jan 2025 11:15:17 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                messages:
                  - _id: 678f80ee27829f049b3937c1
                    body: How Are You?
                    from: sender phone number
                    to: receiver phone number
                    dateReceived: '2025-01-21T11:11:42.912Z'
                  - _id: 678f80ee27829f049b3927c1
                    body: Are you using sms2u?
                    from: sender phone number
                    to: receiver phone number
                    dateReceived: '2025-01-21T11:13:42.912Z'
        '404':
          description: Not Found
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '45'
            ETag:
              schema:
                type: string
                example: W/"2d-hHv8Rbm/ij2cLl9JYZdm1h3pIXg"
            Date:
              schema:
                type: string
                example: Thu, 23 Jan 2025 11:31:55 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: false
                message: User Not Found!
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
